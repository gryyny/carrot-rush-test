var gdjs;(function(o){const i=new o.Logger("Multiplayer"),u=o.multiplayerComponents;let S;(function(n){n.disableMultiplayerForTesting=!1;let M=null,R=!1,E=!1,A=!1;n._isLobbyGameRunning=!1;let G=!1,h=null,I=null;n._lobby=null;let w=[],C=null,c=null,U=null,D=null;const W=1e4,J=3e4;let P=!1;n.playerNumber=null,o.registerRuntimeScenePreEventsCallback(e=>{P=e.getGame().isUsingGDevelopDevelopmentEnvironment(),!n.disableMultiplayerForTesting&&(o.multiplayerMessageManager.handleChangeInstanceOwnerMessagesReceived(e),o.multiplayerMessageManager.handleUpdateInstanceMessagesReceived(e),o.multiplayerMessageManager.handleCustomMessagesReceived(),o.multiplayerMessageManager.handleAcknowledgeMessagesReceived(),o.multiplayerMessageManager.resendClearOrCancelAcknowledgedMessages(e),o.multiplayerMessageManager.handleChangeVariableOwnerMessagesReceived(e),o.multiplayerMessageManager.handleUpdateGameMessagesReceived(e),o.multiplayerMessageManager.handleUpdateSceneMessagesReceived(e),o.multiplayerMessageManager.handleHeartbeatsToSend(),o.multiplayerMessageManager.handleDisconnectedPeers(e))}),o.registerRuntimeScenePostEventsCallback(e=>{n.disableMultiplayerForTesting||(o.multiplayerMessageManager.handleDestroyInstanceMessagesReceived(e),o.multiplayerVariablesManager.handleChangeVariableOwnerMessagesToSend(),o.multiplayerMessageManager.handleUpdateGameMessagesToSend(e),o.multiplayerMessageManager.handleUpdateSceneMessagesToSend(e),o.multiplayerMessageManager.handleHeartbeatsReceived(),F(e),o.multiplayerMessageManager.clearDisconnectedPeers())}),o.registerRuntimeScenePostEventsCallback(()=>{n.disableMultiplayerForTesting||(A=!1,G=!1)});const B=({runtimeGame:e,gameId:t})=>{const r="https://gd.games",s=new URL(`${r}/games/${t}/lobbies${h?`/${h}`:""}`);s.searchParams.set("gameVersion",e.getGameData().properties.version),e.getAdditionalOptions().nativeMobileApp&&s.searchParams.set("nativeMobileApp","true"),s.searchParams.set("isPreview",e.isPreview()?"true":"false"),P&&s.searchParams.set("dev","true"),I&&s.searchParams.set("connectionId",I),n.playerNumber&&s.searchParams.set("positionInLobby",n.playerNumber.toString());const l=o.playerAuthentication.getUserId();l&&s.searchParams.set("playerId",l);const a=o.playerAuthentication.getUserToken();return a&&s.searchParams.set("playerToken",a),s.toString()};n.hasLobbyGameJustStarted=()=>A,n.isLobbyGameRunning=()=>n._isLobbyGameRunning,n.hasLobbyGameJustEnded=()=>G,n.getPlayersInLobbyCount=()=>!n._isLobbyGameRunning&&n._lobby?n._lobby.players.length:n._isLobbyGameRunning?o.multiplayerMessageManager.getNumberOfConnectedPlayers():0,n.getCurrentPlayerNumber=()=>n.playerNumber||0,n.isPlayerHost=()=>n.playerNumber===1;const x=e=>{if(!n._lobby)return"";const t=e-1;return t<0||t>=n._lobby.players.length?"":n._lobby.players[t].playerId};n.getPlayerUsername=e=>{const t=x(e);if(!t)return"";const r=w.find(s=>s.id===t);return r?r.username:`Player ${e}`};const F=e=>{const t=o.multiplayerMessageManager.getDisconnectedPlayers();if(t.length>0)for(const r of t){const s=x(r);if(!s)return;const l=w.find(a=>a.id===s);l&&u.displayPlayerLeftNotification(e,l&&l.username||"Player")}},_=(e,t,r=0)=>{const l=`${P?"https://api-dev.gdevelop.io":"https://api.gdevelop.io"}/game/public-game/${t}`;return fetch(l,{method:"HEAD"}).then(a=>a.status!==200?(i.warn(`Error while fetching the game: ${a.status} ${a.statusText}`),a.status===404||r>2?!1:_(e,t,r+1)):!0,a=>(i.error("Error while fetching game:",a),!1))},z=async(e,t)=>{const s=`${t?"https://api-dev.gdevelop.io":"https://api.gdevelop.io"}/user/user-public-profile/${e}`;return(await fetch(s)).json()},K=async e=>{if(!n._lobby)return;const t=n._lobby.players.map(a=>a.playerId),r=w.map(a=>a.id),s=t.filter(a=>!r.includes(a)),l=r.filter(a=>!t.includes(a));if(!(s.length===0&&l.length===0)){if(s.length>0){const a=await Promise.all(s.map(async d=>await z(d,e)));w=[...w,...a]}l.length>0&&(w=w.filter(d=>!l.includes(d.id)))}},Y=function(e,t){if(I){i.info("Already connected to a lobby.");return}c&&(i.warn("Already connected to a lobby. Closing the previous one."),c.close(),I=null,n.playerNumber=null,h=null,n._lobby=null,c=null);const r=o.projectData.properties.projectUuid,s=o.playerAuthentication.getUserId(),l=o.playerAuthentication.getUserToken();if(!r){i.error("Cannot open lobbies if the project has no ID.");return}if(!s||!l){i.warn("Cannot open lobbies if the player is not connected.");return}const a=P?"wss://api-ws-dev.gdevelop.io/play":"wss://api-ws.gdevelop.io/play",d=new URL(a);d.searchParams.set("gameId",r),d.searchParams.set("lobbyId",t),d.searchParams.set("playerId",s),d.searchParams.set("connectionType","lobby"),d.searchParams.set("playerGameToken",l),c=new WebSocket(d.toString()),c.onopen=()=>{i.info("Connected to the lobby."),U=setInterval(()=>{c&&(i.info("Heartbeat sent to keep connection alive."),c.send(JSON.stringify({action:"heartbeat",connectionType:"lobby"})))},W),c&&c.send(JSON.stringify({action:"getConnectionId"}))},c.onmessage=g=>{if(g.data){const b=JSON.parse(g.data);switch(b.type){case"connectionId":{const p=b.data,m=p.connectionId,T=p.positionInLobby,de=p.validIceServers||[],ge=p.brokerServerConfig;if(!m||!T){i.error("No connectionId or position received");return}q({runtimeScene:e,connectionId:m,positionInLobby:T,lobbyId:t,playerId:s,playerToken:l,validIceServers:de,brokerServerConfig:ge});break}case"lobbyUpdated":{const p=b.data,m=p.lobby,T=p.positionInLobby;if(!m){i.error("No lobby received");return}Q(e,m,T);break}case"gameCountdownStarted":{X(e);break}case"gameStarted":{const m=b.data.heartbeatInterval||J;Z(e,m);break}case"peerId":{const p=b.data;if(!p){i.error("No message received");return}const m=p.peerId;if(!m){i.error("Malformed message received");return}ne(m);break}}}},c.onclose=()=>{if(i.info("Disconnected from the lobby. Either manually or game started."),I=null,c=null,U&&clearInterval(U),n._isLobbyGameRunning)return;const g=u.getLobbiesIframe(e);!g||!g.contentWindow||g.contentWindow.postMessage({id:"lobbyLeft"},"*")}},q=function({runtimeScene:e,connectionId:t,positionInLobby:r,lobbyId:s,playerId:l,playerToken:a,validIceServers:d,brokerServerConfig:g}){if(d.length)for(const p of d)o.evtTools.p2p.useCustomICECandidate(p.urls,p.username,p.credential);g?o.evtTools.p2p.useCustomBrokerServer(g.hostname,g.port,g.path,g.key,g.secure):o.evtTools.p2p.useDefaultBrokerServer(),I=t,n.playerNumber=r,h=s;const b=u.getLobbiesIframe(e);if(!b||!b.contentWindow){i.error("The lobbies iframe is not opened, cannot send the join message.");return}b.contentWindow.postMessage({id:"lobbyJoined",lobbyId:s,playerId:l,playerToken:a,connectionId:I,positionInLobby:r},"https://gd.games")},$=function(){c&&c.close(),I=null,n.playerNumber=null,h=null,n._lobby=null,c=null},Q=function(e,t,r){if(n._lobby=t,t.status==="playing")return;K(P),n.playerNumber=r;const s=u.getLobbiesIframe(e);if(!s||!s.contentWindow){i.info("The lobbies iframe is not opened, not sending message.");return}s.contentWindow.postMessage({id:"lobbyUpdated",positionInLobby:r},"*")},X=function(e){n.getCurrentPlayerNumber()===1&&se();const t=u.getLobbiesIframe(e);if(!t||!t.contentWindow){i.info("The lobbies iframe is not opened, not sending message.");return}t.contentWindow.postMessage({id:"gameCountdownStarted"},"*"),u.hideLobbiesCloseButtonTemporarily(e)},Z=function(e,t){const r=o.evtTools.p2p.getAllPeers();if(!n.isPlayerHost()&&r.length===0){u.displayConnectionErrorNotification(e),$(),n.removeLobbiesContainer(e),N(e);return}if(n.isPlayerHost()){const s=o.projectData.properties.projectUuid,l=o.playerAuthentication.getUserId(),a=o.playerAuthentication.getUserToken();if(!s||!l||!a||!h){i.error("Cannot keep the lobby playing without the game ID or player ID.");return}D=setInterval(async()=>{const d=P?"https://api-dev.gdevelop.io":"https://api.gdevelop.io",g={"Content-Type":"application/json"};let b=`${d}/play/game/${s}/public-lobby/${h}/action/heartbeat`;g.Authorization=`player-game-token ${a}`,b+=`?playerId=${l}`,await fetch(b,{method:"POST",headers:g})},t)}i.info("Lobby game has started."),A=!0,n._isLobbyGameRunning=!0,n.removeLobbiesContainer(e),c&&c.close(),N(e)};n.handleLobbyGameEnded=function(){i.info("Lobby game has ended."),G=!0,n._isLobbyGameRunning=!1,h=null,n._lobby=null,n.playerNumber=null,D&&clearInterval(D),o.evtTools.p2p.disconnectFromAllPeers(),o.multiplayerMessageManager.clearExpectedMessageAcknowledgements()};const ne=function(e){const t=o.evtTools.p2p.getCurrentId();if(!t){i.error("No peerId found, the player does not seem connected to the broker server.");return}if(t===e){i.info("Received our own peerId, ignoring.");return}o.evtTools.p2p.connect(e)},te=function(){if(!c){i.error("No connection to send the start countdown message. Are you connected to a lobby?");return}c.send(JSON.stringify({action:"startGameCountdown",connectionType:"lobby"}))},oe=function(){if(!c){i.error("No connection to send the start countdown message. Are you connected to a lobby?");return}c.send(JSON.stringify({action:"startGame",connectionType:"lobby"}))};n.endLobbyGame=async function(){if(!n.isLobbyGameRunning())return;if(!n.isPlayerHost()){i.error("Only the host can end the game.");return}n._isLobbyGameRunning=!1,o.multiplayerMessageManager.sendEndGameMessage();const e=o.projectData.properties.projectUuid,t=o.playerAuthentication.getUserId(),r=o.playerAuthentication.getUserToken();if(!e||!t||!r||!h){i.error("Cannot end the lobby without the game ID or player ID.");return}const s=P?"https://api-dev.gdevelop.io":"https://api.gdevelop.io",l={"Content-Type":"application/json"};let a=`${s}/play/game/${e}/public-lobby/${h}/action/end`;l.Authorization=`player-game-token ${r}`,a+=`?playerId=${t}`;try{await fetch(a,{method:"POST",headers:l,body:JSON.stringify({gameId:e,lobbyId:h})})}catch(d){i.error("Error while ending the game:",d)}n.handleLobbyGameEnded()};const se=function(){if(!c||!n._lobby){i.error("No connection to send the message. Are you connected to a lobby?");return}const e=o.evtTools.p2p.getCurrentId();if(!e){i.error("No peerId found, the player doesn't seem connected to the broker server.");return}c.send(JSON.stringify({action:"sendPeerId",connectionType:"lobby",peerId:e}))},ae=function(e,t,{checkOrigin:r}){if(!(r&&!["https://gd.games","http://localhost:4000"].includes(t.origin))){if(!t.data.id)throw new Error("Malformed message");switch(t.data.id){case"joinLobby":{if(!t.data.lobbyId)throw new Error("Malformed message.");Y(e,t.data.lobbyId);break}case"startGameCountdown":{te();break}case"startGame":{oe();break}case"leaveLobby":{$();break}}}},O=function(e,t){i.error(t),n.removeLobbiesContainer(e),N(e)},re=(e,t)=>{const r=B({runtimeGame:e.getGame(),gameId:t});C=s=>{ae(e,s,{checkOrigin:!0})},window.addEventListener("message",C,!0),u.displayIframeInsideLobbiesContainer(e,r)};n.openLobbiesWindow=async e=>{if(n.isLobbiesWindowOpen(e)||o.playerAuthentication.isAuthenticationWindowOpen())return;const t=o.projectData.properties.projectUuid;if(!t){O(e,"The game ID is missing, the lobbies window cannot be opened.");return}if(R||E)return;if(!e.getGame().getRenderer().getDomElementContainer()){O(e,"The div element covering the game couldn't be found, the lobbies window cannot be displayed.");return}const s=()=>{n.removeLobbiesContainer(e)},l=o.playerAuthentication.getUserId(),a=o.playerAuthentication.getUserToken();if(!l||!a){E=!0;const{status:b}=await o.playerAuthentication.openAuthenticationWindow(e).promise;E=!1,b==="logged"&&n.openLobbiesWindow(e);return}if(u.displayLobbies(e,s),M===null){R=!0;try{M=await _(e.getGame(),t)}catch(b){M=!1,i.error("Error while checking if the game is registered:",b),O(e,"Error while checking if the game is registered.");return}finally{R=!1}}const d=e.getGame().getRenderer().getElectron(),g=d?()=>d.shell.openExternal("https://wiki.gdevelop.io/gdevelop5/publishing/web"):()=>window.open("https://wiki.gdevelop.io/gdevelop5/publishing/web","_blank");u.addTextsToLoadingContainer(e,M,g),M&&re(e,t)},n.isLobbiesWindowOpen=function(e){return!!u.getLobbiesRootContainer(e)},n.showLobbiesCloseButton=function(e,t){u.changeLobbiesWindowCloseActionVisibility(e,t)},n.removeLobbiesContainer=function(e){ce(),u.removeLobbiesContainer(e)};const ce=function(){C&&(window.removeEventListener("message",C,!0),C=null)},N=function(e){const t=e.getGame().getRenderer().getCanvas();t&&t.focus()}})(S=o.multiplayer||(o.multiplayer={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=multiplayertools.js.map
